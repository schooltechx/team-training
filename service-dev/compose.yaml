version: "3.4"
networks:
  dev:
    external: true
#clear volume: docker volume rm $(docker volume ls -q | grep ehr)
volumes:
  dev_minio_data: {}
  dev_rabbitmq_data:
  dev_postgres_data:
  dev-pgadmin-data:
  dev-mysql-data:
## เลือกรันเฉพาะบาง service ด้วยคำสั่ง docker compose up -d dev-traefik
services:
  dev-traefik:
    image: traefik:v3.0
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/routes.yaml"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dev-traefik.rule=Host(`traefik.local`)"
      - "traefik.http.routers.dev-traefik.service=api@internal"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./routes.yaml:/routes.yaml:rw
    environment:
      - TZ=Asia/Bangkok
    networks:
      - dev
  # ============================== identity
  dev-keycloak:
    image: quay.io/keycloak/keycloak:22.0.3
    restart: unless-stopped
    mem_limit: "1g"
    command:
      - start-dev
#      - --proxy=edge
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - TZ=Asia/Bangkok
    ports:
      - "8080:8080"
    networks:
      - dev
    labels:
      - traefik.enable=true
      - "traefik.http.routers.dev-keycloak.rule=Host(`keycloak.local`)"
      - "traefik.http.routers.dev-keycloak.service=dev-keycloak"
      - "traefik.http.services.dev-keycloak.loadbalancer.server.port=8080"

  # ============================== Object Storage
  dev-minio:
    image: minio/minio:latest
    mem_limit: "1g"
    restart: unless-stopped
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - dev_minio_data:/data
    environment: #https://github.com/minio/minio/issues/13816
      - TZ=Asia/Bangkok
      - MINIO_ROOT_USER=dev
      - MINIO_ROOT_PASSWORD=dev123456
      - MINIO_BROWSER_REDIRECT_URL=http://minio.local/console
      # - MINIO_BROWSER_REDIRECT_URL=http://minio-console.local
      # - MINIO_SERVER_URL=http://minio.local
    networks:
      - dev
    labels:
      - traefik.enable=true
      - "traefik.http.routers.dev-minio.rule=Host(`minio.local`)"
      - "traefik.http.routers.dev-minio.service=dev-minio"
      - "traefik.http.services.dev-minio.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.minio-console-strip.stripprefix.prefixes=/console"
      - "traefik.http.routers.dev-minio-console.rule=Host(`minio.local`) && PathPrefix(`/console`)"
      - "traefik.http.routers.dev-minio-console.middlewares=minio-console-strip"
      - "traefik.http.routers.dev-minio-console.service=dev-minio-console"
      - "traefik.http.services.dev-minio-console.loadbalancer.server.port=9001"
      # - "traefik.http.routers.dev-minio-console.rule=Host(`minio-console.local`)"
      # - "traefik.http.routers.dev-minio-console.service=dev-minio-console"
      # - "traefik.http.services.dev-minio-console.loadbalancer.server.port=9001"
  # ============================== Message Queue
  dev-rabbitmq:
    image: rabbitmq:3-management-alpine
    mem_limit: "1g"
    restart: unless-stopped
    environment:
      - TZ=Asia/Bangkok
      - RABBITMQ_DEFAULT_USER=dev
      - RABBITMQ_DEFAULT_PASS=Dev123456
    ports:
      - 5672:5672
      - 15672:15672 # UI
    volumes:
      - dev_rabbitmq_data:/var/lib/rabbitmq/
    networks:
      - dev
    labels:
      - traefik.enable=true
      - "traefik.http.routers.dev-rabbitmq.rule=Host(`rabbitmq.local`)"
      - "traefik.http.routers.dev-rabbitmq.service=dev-rabbitmq"
      - "traefik.http.services.dev-rabbitmq.loadbalancer.server.port=15672"
  
  # ============================== Database
  dev-postgres:
    image: postgres:15.3
    restart: unless-stopped
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
    environment:
      - POSTGRES_DB=dev_db
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=dev123456
      - TZ=Asia/Bangkok
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d dev_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 80s  
    networks:
      - dev

  dev-pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: unless-stopped
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@xxx.com
      PGADMIN_DEFAULT_PASSWORD: dev123456
    volumes:
      - dev-pgadmin-data:/var/lib/pgadmin
    networks:
      - dev
    labels:
      - traefik.enable=true
      - "traefik.http.routers.dev-pgadmin.rule=Host(`pgadmin.local`)"
      - "traefik.http.routers.dev-pgadmin.service=dev-pgadmin"
      - "traefik.http.services.dev-pgadmin.loadbalancer.server.port=80"

  dev-mysql:
    image: mysql:8
    container_name: mysql
    restart: unless-stopped 
    # ports:
    #   - "3306:3306"
    volumes:
      - dev-mysql-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=dev_db
      - MYSQL_USER=dev
      - MYSQL_PASSWORD=dev123456
      - MYSQL_ROOT_PASSWORD=dev123456
      - TZ=Asia/Bangkok
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 80s 
    networks:
      - dev

  dev-adminer:
    image: adminer
    restart: unless-stopped 
    ports:
      - 9000:8080
    networks:
      - dev
    labels:
      - traefik.enable=true
      - "traefik.http.routers.dev-adminer.rule=Host(`adminer.local`)"
      - "traefik.http.routers.dev-adminer.service=dev-adminer"
      - "traefik.http.services.dev-adminer.loadbalancer.server.port=8080"
